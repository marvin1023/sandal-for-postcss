@charset "UTF-8";
/* stylelint-disable */

/*
** mixin scss
** 包括常用的mixin, %, @function 及辅助的btn和背景图片icon
** mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
** %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段
** @function，返回一个值，用于调用
*/

/*
** mixin & %
** 既定义了mixin也定义了%，根据需求使用@include或@extend调用
*/

/* Center-align a block level element */

@mixin center-block($extend: true) {
  @if $extend {
    @extend %center-block;
  }

  @else {
    margin-left: auto;
    margin-right: auto;
  }
}

%center-block {
  @include center-block(false);
}

/* clearfix */
@mixin clearfix($extend: true) {
  @if $extend {
    @extend %clearfix;
  }

  @else {
    &::before,
    &::after {
      content: "";
      display: table;
    }
    &::after {
      clear: both;
    }
  }
}

%clearfix {
  @include clearfix(false);
}

/* ellipsis */
@mixin ellipsis($extend: true) {
  @if $extend {
    @extend %ellipsis;
  }

  @else {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
}

%ellipsis {
  @include ellipsis(false);
}

/* ellipsis lines */
/* only old webkit flex box */
@mixin ellipsis-lines($lines: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

/* word-break */
@mixin word-break($extend: true) {
  @if $extend {
    @extend %word-break;
  }

  @else {
    white-space: normal;
    word-wrap: break-word;
    word-break: break-all;
  }
}

%word-break {
  @include word-break(false);
}

/* image replace text */
@mixin ir($extend: true) {
  @if $extend {
    @extend %ir;
  }

  @else {
    font: 0/0 a;
    text-shadow: none;
    border: 0 none;
    color: transparent;
  }
}

%ir {
  @include ir(false);
}

/* fixed top or bottom or bottom & top */
@mixin fixed($pos: 0) {
  position: fixed;
  left: 0;
  right: 0;

  @if $pos == bottom {
    bottom: 0;
  } @else {
    @if $pos == all {
      top: 0;
      bottom: 0;
    } @else {
      top: $pos;
    }
  }
}

%fixed-top {
  @include fixed;
}

%fixed-bottom {
  @include fixed(bottom);
}

/* 左右对齐 */
@mixin justify($extend: true) {
  @if $extend {
    @extend %justify;
  }

  @else {
    display: flex;
    justify-content: space-between;
  }
}

%justify {
  @include justify(false);
}


/* linear-gradient实现 */
/* 安卓4.3- 不支持background-size的百分比 */
@mixin retina-one-px-bg($direction: top, $color: #ddd) {
  background-repeat: no-repeat;

  @if $direction == top {
    background-image: linear-gradient(to bottom, $color 50%, transparent 50%);
    background-size: 100% 1px;
  }

  @if $direction == bottom {
    background-image: linear-gradient(to top, $color 50%, transparent 50%);
    background-size: 100% 1px;
    background-position: left bottom;
  }

  @if $direction == left {
    background-image: linear-gradient(to right, $color 50%, transparent 50%);
    background-size: 1px 100%;
  }

  @if $direction == right {
    background-image: linear-gradient(to left, $color 50%, transparent 50%);
    background-size: 1px 100%;
    background-position: right top;
  }

  @if $direction == v { /* 左右两个边框 */
    background-image: linear-gradient(to right, $color 50%, transparent 50%),linear-gradient(to left, $color 50%, transparent 50%);
    background-size: 1px 100%;
    background-position: left top, right top;
  }

  @if $direction == h { /* 上下两个边框 */
    background-image: linear-gradient(to bottom, $color 50%, transparent 50%), linear-gradient(to top, $color 50%, transparent 50%);
    background-size: 100% 1px;
    background-position: left top, left bottom;
  }

  @if $direction == all { /* 上下左右四个边框 */
    background-image: linear-gradient(to bottom, $color 50%, transparent 50%), linear-gradient(to top, $color 50%, transparent 50%), linear-gradient(to right, $color 50%, transparent 50%),linear-gradient(to left, $color 50%, transparent 50%);
    background-size: 100% 1px, 100% 1px, 1px 100%, 1px 100%;
    background-position: left top, left bottom, left top, right top;
  }
}

/* border和transform实现 */
/* 注意before和after的层级问题 */
@mixin retina-one-px-border($direction: top, $color: #ddd) {
  position: absolute;
  left: 0;
  top: 0;
  box-sizing: border-box;

  @if $direction == top {
    right: 0;
    height: 0;
    transform: scaleY(0.5);
    border-top: 1px solid $color;
  }

  @if $direction == bottom {
    right: 0;
    height: 0;
    transform: scaleY(0.5);
    border-top: 1px solid $color;
    top: auto;
    bottom: 0;
  }

  @if $direction == left{
    width: 0;
    bottom: 0;
    transform: scaleX(0.5);
    border-left: 1px solid $color;
  }

  @if $direction == right {
    width: 0;
    bottom: 0;
    transform: scaleX(0.5);
    border-left: 1px solid $color;
    left: auto;
    right: 0;
  }

  @if $direction == all {
    width: 200%;
    height: 200%;
    transform-origin: left top;
    transform: scale(0.5);
    border: 1px solid $color;
  }
}

/* border top & bottom */
%border-tb {
  position: relative;
  &::before {
    content: "";

    @include retina-one-px-border(top);

    z-index: 1;
  }
  &::after {
    content: "";

    @include retina-one-px-border(bottom);
  }
}

/* border all */
%border-all {
  position: relative;
  &::before {
    content: "";

    @include retina-one-px-border(all);

    z-index: -1;
  }
}

/* mixin */
/* 只定义了mixin，所以只能通过@include来调用 */

/* line equal item */
@mixin line-equal-item($lr: true) {
  display: flex;
  justify-content: space-between;

  @if $lr {
    &::before,
    &::after {
      content: "";
    }
  }
}

/* flex center */
@mixin center-flex($direction: both) {
  display: flex;

  @if $direction == both {
    justify-content: center;
    align-items: center;
  }

  @if $direction == x {
    justify-content: center;
  }

  @if $direction == y {
    align-items: center;
  }
}

/* translate center */
@mixin center-translate($direction: both) {
  position: absolute;

  @if $direction == both {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @if $direction == x {
    left: 50%;
    transform: translate(-50%, 0);
  }

  @if $direction == y {
    top: 50%;
    transform: translate(0, -50%);
  }
}

/* object wrap */
@mixin object-wrap($percent: 100%) {
  position: relative;
  padding-top: $percent;
  height: 0;

  .img-fit {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/* triangle 三角箭头 */
/* 可采用空元素或伪元素生成，具体定位这里不涉及 */
%triangle-basic {
  content: "";
  height: 0;
  width: 0;
  overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 6px, $borderColor: #bbb) {
  @extend %triangle-basic;

  @if $direction == top {
    border-bottom: $borderWidth solid $borderColor;
    border-left: $borderWidth dashed transparent;
    border-right: $borderWidth dashed transparent;
  }

  @if $direction == right {
    border-left: $borderWidth solid $borderColor;
    border-top: $borderWidth dashed transparent;
    border-bottom: $borderWidth dashed transparent;
  }

  @if $direction == bottom {
    border-top: $borderWidth solid $borderColor;
    border-left: $borderWidth dashed transparent;
    border-right: $borderWidth dashed transparent;
  }

  @if $direction == left {
    border-right: $borderWidth solid $borderColor;
    border-top: $borderWidth dashed transparent;
    border-bottom: $borderWidth dashed transparent;
  }
}

/* v arrow 方向箭头 */
@mixin v-arrow($direction: right, $borderWidth: 2px, $size: 10px) {
  display: inline-block;
  vertical-align: middle;
  width: $size;
  height: $size;

  @if $direction == top {
    border-top: $borderWidth solid currentColor;
    border-right: $borderWidth solid currentColor;
    transform: rotate(-45deg);
  }

  @if $direction == right {
    border-top: $borderWidth solid currentColor;
    border-right: $borderWidth solid currentColor;
    transform: rotate(45deg);
  }

  @if $direction == bottom {
    border-left: $borderWidth solid currentColor;
    border-bottom: $borderWidth solid currentColor;
    transform: rotate(-45deg);
  }

  @if $direction == left {
    border-left: $borderWidth solid currentColor;
    border-bottom: $borderWidth solid currentColor;
    transform: rotate(45deg);
  }
}

/* % */
/* 只定义了%，所以只能通过@extend来调用 */

/* bar line  */
%bar-line {
  line-height: 34px;
  padding: 5px 10px;
  position: relative;
  display: block;
  overflow: hidden;
  &:not(:first-of-type)::before {
    content: "";

    @include retina-one-px-border;
  }
}

/* item arrow, 右侧箭头跳转指向 */
%item-v-right {
  &::after {
    content: "";

    @include v-arrow;

    color: #bbb;
    position: absolute;
    right: 15px;
    top: 50%;
    margin-top: -1px;
    transform: rotate(45deg) translate(0, -50%);
    box-sizing: border-box;
  }
}

/* 间隔列表 */
%gap-item {
  position: relative;
  background: #fff;
  margin: 10px 0;
  &::before {
    content: "";

    @include retina-one-px-border;
  }
  &::after {
    content: "";

    @include retina-one-px-border(bottom);
  }
}

%disabled {
    cursor: default !important;
    pointer-events: none !important;
}

/* btn
/*----------------------------------------------------
/* btn-basic
/* 按钮基本样式，联合申明 */
%btn-basic {
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
  text-align: center;
  border: 1px solid transparent;
  box-sizing: border-box;
  user-select: none;
  padding: 0 1em;
  white-space: nowrap;
}

/* btn-size
/* 按钮大小 */
@mixin btn-size($padding: 1em, $height: 44px, $radius: 3px) {
  padding: 0 $padding;
  line-height: calc($height - 2px); /* 减掉2px的上下高度 */

  @if $radius {
    border-radius: $radius;
  }
}